# Travis CI (MIT License) configuration file
# @link https://travis-ci.org/

# Use new container based environment
sudo: false

cache:
  directories:
    - node_modules
    - vendor

#use Trusty linux version
dist: precise

# Declare project language.
# @link http://about.travis-ci.org/docs/user/languages/php/
language: php

# Declare versions of PHP to use. Use one decimal max.
# @link http://docs.travis-ci.com/user/build-configuration/
matrix:
    fast_finish: true

    include:
        # aliased to a recent 5.6.x version
        - php: '5.6'
          # Declare which versions of WordPress to test against.
          # Also declare whether or not to test in Multisite.
          env: SNIFF=1 WP_VERSION=master WP_MULTISITE=0
        # recommended php version for WordPress: 7
        # aliased to a recent 7.x version
        - php: '7.0'

before_install:
  # upgrade npm to 5, 6, or higher
  - nvm install stable
  - npm update -g npm # if necessary
  - node --version
  - npm --version

# Use this to prepare your build for testing.
# e.g. copy database configurations, environment variables, etc.
# Failures in this section will result in build status 'errored'.
before_script:
  # Set up WordPress installation.
  - export WP_DEVELOP_DIR=/tmp/wordpress/
  - mkdir -p $WP_DEVELOP_DIR
  # Use the Git mirror of WordPress.
  - if [[ "$SNIFF" == "1" ]]; then git clone --depth=1 --branch="$WP_VERSION" git://develop.git.wordpress.org/ $WP_DEVELOP_DIR; fi
  #install
  - if [[ "$SNIFF" == "1" ]]; then composer install; fi
  # After CodeSniffer install you should refresh your path.
  - if [[ "$SNIFF" == "1" ]]; then phpenv rehash; fi
  # Install ESLINT: JavaScript Code Style checker
  # @link https://eslint.org/
  - if [[ "$SNIFF" == "1" ]]; then npm install --only=dev; fi


# Run test script commands.
# Default is specific to project language.
# All commands must exit with code 0 on success. Anything else is considered failure.
script:
  # Search for PHP syntax errors.
  - if [[ "$SNIFF" == "1" ]]; then find . \( -name '*.php' -not -path "./node-modules/*" -not -path "$TRAVIS_BUILD_DIR/php-codesniffer/*" -not -path "$TRAVIS_BUILD_DIR/composer/*"\) -exec php -lf {} \;; fi
  # Run the code through eslint
  - if [[ "$SNIFF" == "1" ]]; then eslint --config $TRAVIS_BUILD_DIR/.eslintrc.js 'public/js/*.js' --quiet; fi
  # Run the code through stylelint checker
  - if [[ "$SNIFF" == "1" ]]; then stylelint --config $TRAVIS_BUILD_DIR/.stylelint public/css/*.css admin/css/*.css; fi
  # WordPress Coding Standards
      # @link https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards
      # @link http://pear.php.net/package/PHP_CodeSniffer/
      # -p flag: Show progress of the run.
      # -s flag: Show sniff codes in all reports.
      # -v flag: Print verbose output.
      # -n flag: Do not print warnings (shortcut for --warning-severity=0)
      # --standard: Use WordPress as the standard.
      # --extensions: Only sniff PHP files.
  - if [[ "$SNIFF" == "1" ]]; then vendor/squizlabs/php_codesniffer/bin/phpcs --standard=Wordpress-Extra --extensions=php -p -s -v -n . --ignore=./node-modules/*,./vendor/*; fi

notifications:
  email: false
